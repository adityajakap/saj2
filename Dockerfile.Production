# syntax=docker/dockerfile:1.5
FROM node:20-alpine AS build

WORKDIR /app

RUN addgroup --system --gid 1001 nodejs \
	&& adduser --system --uid 1001 nextjs

COPY --chown=nextjs:nodejs package*.json ./

RUN --mount=type=cache,target=/app/.npm,uid=1001,gid=1001 \
	npm set cache /app/.npm && \
	npm ci

COPY --chown=nextjs:nodejs . .

ENV NODE_ENV production

RUN npm run build

FROM node:20-alpine AS runtime

WORKDIR /app

RUN addgroup --system --gid 1001 nodejs \
	&& adduser --system --uid 1001 nextjs

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

COPY --chown=nextjs:nodejs package*.json ./

RUN --mount=type=cache,target=/app/.npm,uid=1001,gid=1001 \
    npm set cache /app/.npm && \
    npm ci --only=production

COPY --chown=nextjs:nodejs --from=build /app/.next ./.next
COPY --chown=nextjs:nodejs --from=build /app/public ./public
COPY --chown=nextjs:nodejs --from=build /app/next.config.mjs ./next.config.mjs

USER nextjs

EXPOSE 3000

HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
	CMD wget -q --spider http://localhost:3000/ || exit 1

CMD ["npm", "start"]
